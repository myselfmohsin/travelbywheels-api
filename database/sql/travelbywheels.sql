-- MySQL Script generated by MySQL Workbench
-- Wed Dec  9 19:08:44 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema travelbywheels
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `travelbywheels` ;

-- -----------------------------------------------------
-- Schema travelbywheels
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `travelbywheels` DEFAULT CHARACTER SET utf8 ;
USE `travelbywheels` ;

-- -----------------------------------------------------
-- Table `travelbywheels`.`person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`person` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`person` (
  `person_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `date_of_birth` TIMESTAMP NULL,
  `phone_number` VARCHAR(15) NULL,
  `mobile_number` VARCHAR(15) NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`person_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`user` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`user` (
  `user_id` INT NOT NULL,
  `user_email` VARCHAR(100) NOT NULL,
  `user_password` VARCHAR(45) NOT NULL,
  `is_active_flag` CHAR(1) NOT NULL DEFAULT 'N',
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  UNIQUE INDEX `user_email_UNIQUE` (`user_email` ASC),
  INDEX `fk_user_person_idx` (`user_id` ASC),
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_user_person`
    FOREIGN KEY (`user_id`)
    REFERENCES `travelbywheels`.`person` (`person_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`LK_country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`LK_country` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`LK_country` (
  `country_code` CHAR(3) NOT NULL,
  `country_name` VARCHAR(45) NOT NULL,
  `country_flag_url` VARCHAR(250) NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `business_priority` INT NULL,
  `is_default_choice` CHAR(1) NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`country_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`LK_state`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`LK_state` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`LK_state` (
  `state_code` INT NOT NULL AUTO_INCREMENT,
  `country_code` CHAR(3) NOT NULL,
  `state_name` VARCHAR(100) NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `business_priority` INT NULL,
  `is_default_choice` CHAR(1) NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`state_code`, `country_code`),
  INDEX `fk_state_country1_idx` (`country_code` ASC),
  CONSTRAINT `fk_state_country1`
    FOREIGN KEY (`country_code`)
    REFERENCES `travelbywheels`.`LK_country` (`country_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`LK_city`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`LK_city` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`LK_city` (
  `city_code` INT NOT NULL AUTO_INCREMENT,
  `state_code` INT NOT NULL,
  `country_code` CHAR(3) NOT NULL,
  `city_name` VARCHAR(100) NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `business_priority` INT NULL,
  `is_default_choice` CHAR(1) NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`city_code`, `state_code`, `country_code`),
  INDEX `fk_city_state1_idx` (`state_code` ASC, `country_code` ASC),
  CONSTRAINT `fk_city_state1`
    FOREIGN KEY (`state_code` , `country_code`)
    REFERENCES `travelbywheels`.`LK_state` (`state_code` , `country_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`address` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`address` (
  `address_id` INT NOT NULL AUTO_INCREMENT,
  `address_line1` VARCHAR(45) NOT NULL,
  `address_line2` VARCHAR(45) NOT NULL,
  `address_line3` VARCHAR(45) NULL,
  `city_code` INT NOT NULL,
  `state_code` INT NOT NULL,
  `country_code` CHAR(3) NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`address_id`),
  INDEX `fk_address_city1_idx` (`city_code` ASC, `state_code` ASC, `country_code` ASC),
  CONSTRAINT `fk_address_city1`
    FOREIGN KEY (`city_code` , `state_code` , `country_code`)
    REFERENCES `travelbywheels`.`LK_city` (`city_code` , `state_code` , `country_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`LK_quote_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`LK_quote_status` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`LK_quote_status` (
  `quote_status_code` INT NOT NULL AUTO_INCREMENT,
  `quote_status_name` VARCHAR(45) NOT NULL,
  `quote_status_description` VARCHAR(45) NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `business_priority` INT NULL,
  `is_default_choice` CHAR(1) NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`quote_status_code`),
  UNIQUE INDEX `quote_status_name_UNIQUE` (`quote_status_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`travel_agency`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`travel_agency` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`travel_agency` (
  `travel_agency_id` INT NOT NULL AUTO_INCREMENT,
  `agency_name` VARCHAR(45) NOT NULL,
  `agency_phone` VARCHAR(15) NULL,
  `agency_mobile` VARCHAR(15) NULL,
  `agency_address_id` INT NOT NULL,
  `responsible_person_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`travel_agency_id`),
  INDEX `fk_travel_agency_address1_idx` (`agency_address_id` ASC),
  INDEX `fk_travel_agency_person1_idx` (`responsible_person_id` ASC),
  CONSTRAINT `fk_travel_agency_address1`
    FOREIGN KEY (`agency_address_id`)
    REFERENCES `travelbywheels`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_travel_agency_person1`
    FOREIGN KEY (`responsible_person_id`)
    REFERENCES `travelbywheels`.`person` (`person_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`agency_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`agency_user` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`agency_user` (
  `user_id` INT NOT NULL,
  `travel_agency_id` INT NOT NULL,
  `is_active_user_flag` CHAR(1) NOT NULL DEFAULT 'Y',
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`user_id`, `travel_agency_id`),
  INDEX `fk_agency_user_travel_agency1_idx` (`travel_agency_id` ASC),
  CONSTRAINT `fk_agency_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `travelbywheels`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_agency_user_travel_agency1`
    FOREIGN KEY (`travel_agency_id`)
    REFERENCES `travelbywheels`.`travel_agency` (`travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`vehicle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`vehicle` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`vehicle` (
  `vehicle_id` INT NOT NULL AUTO_INCREMENT,
  `number_plate` VARCHAR(45) NULL,
  `vehicle_make` VARCHAR(45) NULL,
  `vehicle_model` VARCHAR(45) NULL,
  `vehicle_registration_year` VARCHAR(45) NULL,
  `is_vehicle_verified` CHAR(1) NOT NULL DEFAULT 'N',
  `travel_agency_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`vehicle_id`),
  INDEX `fk_vehicle_travel_agency1_idx` (`travel_agency_id` ASC),
  CONSTRAINT `fk_vehicle_travel_agency1`
    FOREIGN KEY (`travel_agency_id`)
    REFERENCES `travelbywheels`.`travel_agency` (`travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`quote`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`quote` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`quote` (
  `quote_id` INT NOT NULL AUTO_INCREMENT,
  `journey_id` INT NOT NULL,
  `quote_price` DECIMAL(6,2) NOT NULL,
  `quote_description` VARCHAR(500) NULL,
  `quote_status_code` INT NOT NULL,
  `user_id` INT NOT NULL,
  `travel_agency_id` INT NOT NULL,
  `driver_driver_id` INT NOT NULL,
  `vehicle_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`quote_id`),
  INDEX `fk_quote_journey1_idx` (`journey_id` ASC),
  INDEX `fk_quote_quote_status1_idx` (`quote_status_code` ASC),
  INDEX `fk_quote_agency_user1_idx` (`user_id` ASC, `travel_agency_id` ASC),
  INDEX `fk_quote_vehicle1_idx` (`vehicle_id` ASC),
  CONSTRAINT `fk_quote_journey1`
    FOREIGN KEY (`journey_id`)
    REFERENCES `travelbywheels`.`journey` (`journey_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_quote_quote_status1`
    FOREIGN KEY (`quote_status_code`)
    REFERENCES `travelbywheels`.`LK_quote_status` (`quote_status_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_quote_agency_user1`
    FOREIGN KEY (`user_id` , `travel_agency_id`)
    REFERENCES `travelbywheels`.`agency_user` (`user_id` , `travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_quote_vehicle1`
    FOREIGN KEY (`vehicle_id`)
    REFERENCES `travelbywheels`.`vehicle` (`vehicle_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`LK_journey_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`LK_journey_status` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`LK_journey_status` (
  `journey_status_code` INT NOT NULL AUTO_INCREMENT,
  `journey_status_name` VARCHAR(45) NOT NULL,
  `journey_status_description` VARCHAR(45) NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `business_priority` INT NULL,
  `is_default_choice` CHAR(1) NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`journey_status_code`),
  UNIQUE INDEX `journey_status_name_UNIQUE` (`journey_status_name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`journey`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`journey` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`journey` (
  `journey_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `from_city_code` INT NOT NULL,
  `from_state_code` INT NOT NULL,
  `from_country_code` CHAR(3) NOT NULL,
  `to_city_code` INT NOT NULL,
  `to_state_code` INT NOT NULL,
  `to_country_code` CHAR(3) NOT NULL,
  `departure_date_time` VARCHAR(45) NOT NULL,
  `return_date_time` VARCHAR(45) NULL,
  `special_request` VARCHAR(250) NULL,
  `no_of_passengers` INT NULL,
  `no_of_extra_large_luggage` INT NULL,
  `no_of_large_luggage` INT NULL,
  `no_of_medium_luggage` INT NULL,
  `no_of_small_luggage` INT NULL,
  `accepted_quote_id` INT NULL,
  `journey_status_code` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`journey_id`),
  INDEX `fk_journey_city1_idx` (`from_city_code` ASC, `from_state_code` ASC, `from_country_code` ASC),
  INDEX `fk_journey_user1_idx` (`user_id` ASC),
  INDEX `fk_journey_city2_idx` (`to_city_code` ASC, `to_state_code` ASC, `to_country_code` ASC),
  INDEX `fk_journey_quote1_idx` (`accepted_quote_id` ASC),
  INDEX `fk_journey_LK_journey_status1_idx` (`journey_status_code` ASC),
  CONSTRAINT `fk_journey_city1`
    FOREIGN KEY (`from_city_code` , `from_state_code` , `from_country_code`)
    REFERENCES `travelbywheels`.`LK_city` (`city_code` , `state_code` , `country_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_journey_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `travelbywheels`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_journey_city2`
    FOREIGN KEY (`to_city_code` , `to_state_code` , `to_country_code`)
    REFERENCES `travelbywheels`.`LK_city` (`city_code` , `state_code` , `country_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_journey_quote1`
    FOREIGN KEY (`accepted_quote_id`)
    REFERENCES `travelbywheels`.`quote` (`quote_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_journey_LK_journey_status1`
    FOREIGN KEY (`journey_status_code`)
    REFERENCES `travelbywheels`.`LK_journey_status` (`journey_status_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`person_address`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`person_address` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`person_address` (
  `address_id` INT NOT NULL,
  `person_id` INT NOT NULL,
  `is_primary_address_flag` CHAR(1) NOT NULL DEFAULT 'N',
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`address_id`, `person_id`),
  INDEX `fk_person_address_person1_idx` (`person_id` ASC),
  CONSTRAINT `fk_person_address_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `travelbywheels`.`address` (`address_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_person_address_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `travelbywheels`.`person` (`person_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`message_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`message_log` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`message_log` (
  `message_log_id` INT NOT NULL AUTO_INCREMENT,
  `message_text` VARCHAR(500) NOT NULL,
  `user_id` INT NOT NULL,
  `travel_agency_id` INT NOT NULL,
  `journey_id` INT NOT NULL,
  `parent_message_log_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`message_log_id`),
  INDEX `fk_message_log_agency_user1_idx` (`user_id` ASC, `travel_agency_id` ASC),
  INDEX `fk_message_log_journey1_idx` (`journey_id` ASC),
  INDEX `fk_message_log_message_log1_idx` (`parent_message_log_id` ASC),
  CONSTRAINT `fk_message_log_agency_user1`
    FOREIGN KEY (`user_id` , `travel_agency_id`)
    REFERENCES `travelbywheels`.`agency_user` (`user_id` , `travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_log_journey1`
    FOREIGN KEY (`journey_id`)
    REFERENCES `travelbywheels`.`journey` (`journey_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_log_message_log1`
    FOREIGN KEY (`parent_message_log_id`)
    REFERENCES `travelbywheels`.`message_log` (`message_log_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`driver`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`driver` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`driver` (
  `driver_id` INT NOT NULL AUTO_INCREMENT,
  `driver_photo_thumbnail_url` VARCHAR(250) NULL,
  `driver_photo_url` VARCHAR(250) NULL,
  `driver_licence_number` VARCHAR(45) NULL,
  `first_licence_issue_date` TIMESTAMP NULL,
  `is_licence_verified` CHAR(1) NOT NULL DEFAULT 'N',
  `is_address_verified` CHAR(1) NOT NULL DEFAULT 'N',
  `travel_agency_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`driver_id`),
  INDEX `fk_driver_travel_agency1_idx` (`travel_agency_id` ASC),
  INDEX `fk_driver_person1_idx` (`driver_id` ASC),
  CONSTRAINT `fk_driver_travel_agency1`
    FOREIGN KEY (`travel_agency_id`)
    REFERENCES `travelbywheels`.`travel_agency` (`travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_driver_person1`
    FOREIGN KEY (`driver_id`)
    REFERENCES `travelbywheels`.`person` (`person_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`LK_feature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`LK_feature` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`LK_feature` (
  `feature_code` INT NOT NULL AUTO_INCREMENT,
  `feature_name` VARCHAR(45) NULL,
  `feature_description` VARCHAR(250) NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `business_priority` INT NULL,
  `is_default_choice` CHAR(1) NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`feature_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`vehicle_feature`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`vehicle_feature` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`vehicle_feature` (
  `vehicle_feature_id` INT NOT NULL AUTO_INCREMENT,
  `vehicle_id` INT NOT NULL,
  `feature_code` INT NOT NULL,
  `is_feature_verified` CHAR(1) NOT NULL DEFAULT 'N',
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`vehicle_feature_id`),
  INDEX `fk_vehicle_feature_vehicle1_idx` (`vehicle_id` ASC),
  INDEX `fk_vehicle_feature_feature1_idx` (`feature_code` ASC),
  CONSTRAINT `fk_vehicle_feature_vehicle1`
    FOREIGN KEY (`vehicle_id`)
    REFERENCES `travelbywheels`.`vehicle` (`vehicle_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vehicle_feature_feature1`
    FOREIGN KEY (`feature_code`)
    REFERENCES `travelbywheels`.`LK_feature` (`feature_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`vehicle_photo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`vehicle_photo` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`vehicle_photo` (
  `vehicle_photo_id` INT NOT NULL AUTO_INCREMENT,
  `vehicle_photo_thumbnail_url` VARCHAR(250) NOT NULL,
  `vehicle_photo_url` VARCHAR(250) NOT NULL,
  `vehicle_vehicle_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`vehicle_photo_id`),
  INDEX `fk_vehicle_photo_vehicle1_idx` (`vehicle_vehicle_id` ASC),
  CONSTRAINT `fk_vehicle_photo_vehicle1`
    FOREIGN KEY (`vehicle_vehicle_id`)
    REFERENCES `travelbywheels`.`vehicle` (`vehicle_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`review_about_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`review_about_user` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`review_about_user` (
  `review_about_user_id` INT NOT NULL AUTO_INCREMENT,
  `by_travel_agency_id` INT NOT NULL,
  `for_user_id` INT NOT NULL,
  `user_review_text` VARCHAR(500) NULL,
  `user_rating` INT NULL,
  `journey_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`review_about_user_id`),
  INDEX `fk_review_on_user_travel_agency1_idx` (`by_travel_agency_id` ASC),
  INDEX `fk_review_on_user_user1_idx` (`for_user_id` ASC),
  INDEX `fk_review_about_user_journey1_idx` (`journey_id` ASC),
  CONSTRAINT `fk_review_on_user_travel_agency1`
    FOREIGN KEY (`by_travel_agency_id`)
    REFERENCES `travelbywheels`.`travel_agency` (`travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_on_user_user1`
    FOREIGN KEY (`for_user_id`)
    REFERENCES `travelbywheels`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_about_user_journey1`
    FOREIGN KEY (`journey_id`)
    REFERENCES `travelbywheels`.`journey` (`journey_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`review_about_travel_agency`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`review_about_travel_agency` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`review_about_travel_agency` (
  `review_about_travel_agency_id` INT NOT NULL AUTO_INCREMENT,
  `travel_agency_review_text` VARCHAR(45) NULL,
  `by_user_id` INT NOT NULL,
  `for_travel_agency_id` INT NOT NULL,
  `journey_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`review_about_travel_agency_id`),
  INDEX `fk_review_about_travel_agency_travel_agency1_idx` (`for_travel_agency_id` ASC),
  INDEX `fk_review_about_travel_agency_user1_idx` (`by_user_id` ASC),
  INDEX `fk_review_about_travel_agency_journey1_idx` (`journey_id` ASC),
  CONSTRAINT `fk_review_about_travel_agency_travel_agency1`
    FOREIGN KEY (`for_travel_agency_id`)
    REFERENCES `travelbywheels`.`travel_agency` (`travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_about_travel_agency_user1`
    FOREIGN KEY (`by_user_id`)
    REFERENCES `travelbywheels`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_about_travel_agency_journey1`
    FOREIGN KEY (`journey_id`)
    REFERENCES `travelbywheels`.`journey` (`journey_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`LK_review_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`LK_review_category` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`LK_review_category` (
  `review_category_code` INT NOT NULL AUTO_INCREMENT,
  `review_category_name` VARCHAR(45) NOT NULL,
  `review_category_description` VARCHAR(250) NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `business_priority` INT NULL,
  `is_default_choice` CHAR(1) NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`review_category_code`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`travel_agency_rating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`travel_agency_rating` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`travel_agency_rating` (
  `travel_agency_rating_id` INT NOT NULL AUTO_INCREMENT,
  `travel_agency_rating` INT NULL,
  `review_category_code` INT NOT NULL,
  `review_about_travel_agency_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`travel_agency_rating_id`),
  INDEX `fk_travel_agency_rating_review_category1_idx` (`review_category_code` ASC),
  INDEX `fk_travel_agency_rating_review_about_travel_agency1_idx` (`review_about_travel_agency_id` ASC),
  CONSTRAINT `fk_travel_agency_rating_review_category1`
    FOREIGN KEY (`review_category_code`)
    REFERENCES `travelbywheels`.`LK_review_category` (`review_category_code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_travel_agency_rating_review_about_travel_agency1`
    FOREIGN KEY (`review_about_travel_agency_id`)
    REFERENCES `travelbywheels`.`review_about_travel_agency` (`review_about_travel_agency_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`role` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`role` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `travelbywheels`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `travelbywheels`.`user_role` ;

CREATE TABLE IF NOT EXISTS `travelbywheels`.`user_role` (
  `user_user_id` INT NOT NULL,
  `role_role_id` INT NOT NULL,
  `create_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by` INT NOT NULL,
  `last_update_date` TIMESTAMP NULL,
  `last_updated_by` INT NULL,
  `jpa_version_number` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`user_user_id`, `role_role_id`),
  INDEX `fk_user_role_role1_idx` (`role_role_id` ASC),
  CONSTRAINT `fk_user_role_user1`
    FOREIGN KEY (`user_user_id`)
    REFERENCES `travelbywheels`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_role_role1`
    FOREIGN KEY (`role_role_id`)
    REFERENCES `travelbywheels`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
